<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="..\..\packages\xunit.core\build\xunit.core.props" Condition="Exists('..\..\packages\xunit.core\build\xunit.core.props')" Label="Paket" />
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{21180A8B-7F36-432F-97DE-21AE0E5BEEDA}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>MustardBlack.Tests</RootNamespace>
    <AssemblyName>MustardBlack.Tests</AssemblyName>
    <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
    <Reference Include="System.Xml.Linq" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Applications\ApplicationRouterSpecs\RouteApplication\Order.cs" />
    <Compile Include="AutoMockedSpecification.cs" />
    <Compile Include="AutoMocker.cs" />
    <Compile Include="TheoryExplicitAttribute.cs" />
    <Compile Include="ThenExplicitAttribute.cs" />
    <Compile Include="ShouldExtensions.cs" />
    <Compile Include="Compression\Gzip\EmptyStream.cs" />
    <Compile Include="Compression\Gzip\MultipleWriting.cs" />
    <Compile Include="Compression\Brotli\MultipleWriting.cs" />
    <Compile Include="Compression\Brotli\EmptyStream.cs" />
    <Compile Include="Handlers\Binding\Binders\Bools\WhenBindingAFalseNullableBool.cs" />
    <Compile Include="Handlers\Binding\Binders\Bools\WhenBindingAnEmptyNullableBool.cs" />
    <Compile Include="Handlers\Binding\Binders\Bools\WhenBindingANullNullableBool.cs" />
    <Compile Include="Handlers\Binding\Binders\Bools\WhenBindingATrueAndFalseNullableBool.cs" />
    <Compile Include="Handlers\Binding\Binders\Bools\WhenBindingATrueNullableBool.cs" />
    <Compile Include="Handlers\Binding\Binders\Dictionary\StringStringDictionary.cs" />
    <Compile Include="Handlers\Binding\Binders\Dictionary\UsingComplexTypeAsValue.cs" />
    <Compile Include="Handlers\Binding\Binders\Dictionary\UsingGuidAsKey.cs" />
    <Compile Include="Handlers\Binding\Binders\EnumerableOfFiles.cs" />
    <Compile Include="Handlers\Binding\Binders\EnumerableOfStringsBinderSpecs.cs" />
    <Compile Include="Handlers\Binding\Binders\Guids\WhenBindingAMissingGuid.cs" />
    <Compile Include="Handlers\Binding\Binders\Json\ErroneousIDNEmailAddressesInJson.cs" />
    <Compile Include="Handlers\Binding\Binders\Json\IDNEmailAddressesInJson.cs" />
    <Compile Include="Handlers\Binding\Binders\Json\WhenBindingSomeComplexJson.cs" />
    <Compile Include="Handlers\Binding\Binders\Json\WhenBindingSomeJson.cs" />
    <Compile Include="Handlers\Binding\Binders\primitives\WhenBindingInvalidPrimitives.cs" />
    <Compile Include="Handlers\Binding\BindingSpecification.cs" />
    <Compile Include="Handlers\Binding\Performance\RequestBinderTests.cs" />
    <Compile Include="Handlers\Binding\Performance\TestRequest.cs" />
    <Compile Include="Handlers\Binding\RequestBinderSpecs\MixedJsonAndRouteValues.cs" />
    <Compile Include="Handlers\Binding\TestClasses.cs" />
    <Compile Include="Handlers\Binding\WhenBindingACsv.cs" />
    <Compile Include="Handlers\Binding\WhenBindingAnEmptyDouble.cs" />
    <Compile Include="Handlers\Binding\WhenBindingAnEmptyInteger.cs" />
    <Compile Include="Handlers\Binding\WhenBindingAnEnumOnAComplexClass.cs" />
    <Compile Include="Handlers\Binding\WhenBindingANullableEnumOnAComplexClass.cs" />
    <Compile Include="Handlers\Binding\WhenBindingANullableEnumOnAComplexClassWithNoValue.cs" />
    <Compile Include="Handlers\Binding\WhenBindingEmptyPrimitiveTypesInAClass.cs" />
    <Compile Include="Handlers\Binding\WhenBindingNestedSimpleInvalidProperties.cs" />
    <Compile Include="Handlers\Binding\WhenBindingNothingToADouble.cs" />
    <Compile Include="Handlers\Binding\WhenBindingNothingToAnInteger.cs" />
    <Compile Include="Handlers\Binding\WhenBindingNullableProperties.cs" />
    <Compile Include="Handlers\Binding\WhenBindingSimpleInvalidProperties.cs" />
    <Compile Include="Handlers\Binding\WhenBindingSimpleMissingProperties.cs" />
    <Compile Include="Handlers\Binding\WhenSuccessfullyBindingAGuid.cs" />
    <Compile Include="Handlers\Binding\WhenUnSuccessfullyBindingAGuidWithAnEmptyString.cs" />
    <Compile Include="Handlers\Binding\WhenUnSuccessfullyBindingAGuidWithAnInvalidString.cs" />
    <Compile Include="Handlers\Binding\when_binding_a_enum_flags_property.cs" />
    <Compile Include="Handlers\Binding\when_binding_complex_list_properties.cs" />
    <Compile Include="Handlers\Binding\when_binding_enumerablestring_properties.cs" />
    <Compile Include="Handlers\Binding\when_binding_enumerable_properties.cs" />
    <Compile Include="Handlers\Binding\when_binding_nested_nested_simple_properties.cs" />
    <Compile Include="Handlers\Binding\when_binding_nested_simple_properties.cs" />
    <Compile Include="Handlers\Binding\when_binding_simple_properties.cs" />
    <Compile Include="Handlers\HandlerCacheSpecs\ShouldRegisterAllAttributePOs.cs" />
    <Compile Include="Handlers\Results\ResultSpecs\BaseExecutorSpec.cs" />
    <Compile Include="Handlers\Results\ResultSpecs\DefaultCachePolicy.cs" />
    <Compile Include="Helpers\TestRequest.cs" />
    <Compile Include="Helpers\TestResponse.cs" />
    <Compile Include="Helpers\TestResponseCookieCollection.cs" />
    <Compile Include="Hosting\RequestCookieCollectionSpecs\GettingAndSettingCookies.cs" />
    <Compile Include="Hosting\RequestCookieCollectionSpecs\Parsing.cs" />
    <Compile Include="MimeMappingsSpecs\Specs.cs" />
    <Compile Include="ModRewrite\Complex\ComplexSpec1.cs" />
    <Compile Include="ModRewrite\FailureModRewriteSpecification.cs" />
    <Compile Include="ModRewrite\ModRewriteSpecification.cs" />
    <Compile Include="ModRewrite\NonRedirects\NotFound.cs" />
    <Compile Include="ModRewrite\Options\DefaultRedirect.cs" />
    <Compile Include="ModRewrite\Options\GlobalCaseInsensitivity.cs" />
    <Compile Include="ModRewrite\RewriteCondAndRule\Fail\HostConditionAndSimplePath.cs" />
    <Compile Include="ModRewrite\RewriteCondAndRule\Fail\NegatedCondition.cs" />
    <Compile Include="ModRewrite\RewriteCondAndRule\Fail\QueryStringAndSimplePath.cs" />
    <Compile Include="ModRewrite\RewriteCondAndRule\Fail\RequestUriAndSimplePath.cs" />
    <Compile Include="ModRewrite\RewriteCondAndRule\Success\HostConditionAndSimplePath.cs" />
    <Compile Include="ModRewrite\RewriteCondAndRule\Success\HostConditionCaptureGroupAndSimplePath.cs" />
    <Compile Include="ModRewrite\RewriteCondAndRule\Success\NegatedCondition.cs" />
    <Compile Include="ModRewrite\RewriteCondAndRule\Success\QueryStringAndSimplePath.cs" />
    <Compile Include="ModRewrite\RewriteCondAndRule\Success\RequestUriAndSimplePath.cs" />
    <Compile Include="ModRewrite\RewriteRuleOnly\Success\LeadingSlash.cs" />
    <Compile Include="ModRewrite\RewriteRuleOnly\Success\QueryStrings\RequestQS.cs" />
    <Compile Include="ModRewrite\RewriteRuleOnly\Success\QueryStrings\RequestQSAndResponseQS.cs" />
    <Compile Include="ModRewrite\RewriteRuleOnly\Success\QueryStrings\RequestQSAndResponseQSWithQSA.cs" />
    <Compile Include="ModRewrite\RewriteRuleOnly\Success\QueryStrings\RequestQSWithQSA.cs" />
    <Compile Include="ModRewrite\RewriteRuleOnly\Success\QueryStrings\RequestQSWithQSD.cs" />
    <Compile Include="ModRewrite\RewriteRuleOnly\Success\RegexPath.cs" />
    <Compile Include="ModRewrite\RewriteRuleOnly\Success\RegexPathWithCaptureGroups.cs" />
    <Compile Include="ModRewrite\RewriteRuleOnly\Success\SimplePath.cs" />
    <Compile Include="ModRewrite\RewriteRuleOnly\Success\SimplePathR301.cs" />
    <Compile Include="ModRewrite\RewriteRuleOnly\Success\SimplePathR303.cs" />
    <Compile Include="ModRewrite\RewriteRuleOnly\Success\SimplePathR307.cs" />
    <Compile Include="ModRewrite\RewriteRuleOnly\Success\SimplePathRPermanent.cs" />
    <Compile Include="ModRewrite\RewriteRuleOnly\Success\SimplePathRSeeOther.cs" />
    <Compile Include="ModRewrite\RewriteRuleOnly\Success\SimplePathRTemp.cs" />
    <Compile Include="ModRewrite\RewriteRuleOnly\Success\SimplePathWithRedirectQs.cs" />
    <Compile Include="ModRewrite\SuccessfulRedirectModRewriteSpecification.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Routing\RouteValueSpecs\CaseInsensitivity\Add.cs" />
    <Compile Include="Routing\RouteValueSpecs\CaseInsensitivity\DictionaryCtor.cs" />
    <Compile Include="Routing\RouteValueSpecs\CaseInsensitivity\ObjectCtor.cs" />
    <Compile Include="Specification.cs" />
    <Compile Include="ThenAttribute.cs" />
    <Compile Include="UrlSpecs\AbsoluteString.cs" />
    <Compile Include="UrlSpecs\EncodingCasing.cs" />
    <Compile Include="UrlSpecs\Equality.cs" />
    <Compile Include="UrlSpecs\FromUri.cs" />
    <Compile Include="UrlSpecs\FromUrl.cs" />
    <Compile Include="UrlSpecs\HashFragment.cs" />
    <Compile Include="UrlSpecs\Https.cs" />
    <Compile Include="UrlSpecs\PartQueryString.cs" />
    <Compile Include="UrlSpecs\QueryObject.cs" />
    <Compile Include="UrlSpecs\RelativePathString.cs" />
    <Compile Include="UrlSpecs\RelativePathUri.cs" />
    <Compile Include="UrlSpecs\RelativePathWithDataAndFragment.cs" />
    <Compile Include="UrlSpecs\RelativeUriWithData.cs" />
    <Compile Include="UrlSpecs\RelativeUriWithDataSeparate.cs" />
    <Compile Include="UrlSpecs\SetPathAndQuery.cs" />
    <Compile Include="UrlSpecs\TrailingDot.cs" />
    <Compile Include="UrlSpecs\TrailingSlash.cs" />
    <Compile Include="UrlSpecs\TrailingSlashWithQS.cs" />
    <Compile Include="UrlSpecs\WhenCreatingAUrlWithDataParam.cs" />
    <Compile Include="UrlSpecs\when_creating_a_url_from_a_valid_urlstring_without_a_query_string.cs" />
    <Compile Include="UrlSpecs\when_creating_a_url_from_a_valid_urlstring_with_a_query_string.cs" />
    <Compile Include="UrlSpecs\when_creating_a_url_with_data.cs" />
    <Compile Include="UrlSpecs\when_modifying_the_query_collection.cs" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\MustardBlack.Hosting.AspNet\MustardBlack.Hosting.AspNet.csproj">
      <Project>{d4264c23-358f-4071-a7ee-5fe8c9345f26}</Project>
      <Name>MustardBlack.Hosting.AspNet</Name>
    </ProjectReference>
    <ProjectReference Include="..\MustardBlack\MustardBlack.csproj">
      <Project>{823cdc0b-1f01-4e42-ab08-785fef3fa4de}</Project>
      <Name>MustardBlack</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <None Include="paket.references" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Choose>
    <When Condition="$(TargetFrameworkIdentifier) == '.NETFramework' And $(TargetFrameworkVersion) == 'v4.7.1'">
      <ItemGroup>
        <Reference Include="Brotli.NET">
          <HintPath>..\..\packages\Brotli.NET\lib\net40\Brotli.NET.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
  <Choose>
    <When Condition="$(TargetFrameworkIdentifier) == '.NETFramework' And $(TargetFrameworkVersion) == 'v4.7.1'">
      <ItemGroup>
        <Reference Include="System.Configuration">
          <Paket>True</Paket>
        </Reference>
        <Reference Include="Castle.Core">
          <HintPath>..\..\packages\Castle.Core\lib\net45\Castle.Core.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
  <Choose>
    <When Condition="$(TargetFrameworkIdentifier) == '.NETFramework' And $(TargetFrameworkVersion) == 'v4.7.1'">
      <ItemGroup>
        <Reference Include="DotNetZip">
          <HintPath>..\..\packages\DotNetZip\lib\net20\DotNetZip.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
  <Choose>
    <When Condition="$(TargetFrameworkIdentifier) == '.NETFramework' And $(TargetFrameworkVersion) == 'v4.7.1'">
      <ItemGroup>
        <Reference Include="MuonLab.Validation">
          <HintPath>..\..\packages\MuonLab.Validation\lib\net461\MuonLab.Validation.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
  <Choose>
    <When Condition="$(TargetFrameworkIdentifier) == '.NETFramework' And $(TargetFrameworkVersion) == 'v4.7.1'">
      <ItemGroup>
        <Reference Include="System.Web">
          <Paket>True</Paket>
        </Reference>
        <Reference Include="NanoIoC">
          <HintPath>..\..\packages\NanoIoC\lib\net46\NanoIoC.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
  <Choose>
    <When Condition="$(TargetFrameworkIdentifier) == '.NETFramework' And $(TargetFrameworkVersion) == 'v4.7.1'">
      <ItemGroup>
        <Reference Include="Newtonsoft.Json">
          <HintPath>..\..\packages\Newtonsoft.Json\lib\net45\Newtonsoft.Json.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
  <Choose>
    <When Condition="$(TargetFrameworkIdentifier) == '.NETFramework' And $(TargetFrameworkVersion) == 'v4.7.1'">
      <ItemGroup>
        <Reference Include="NSubstitute">
          <HintPath>..\..\packages\NSubstitute\lib\net46\NSubstitute.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
  <Choose>
    <When Condition="$(TargetFrameworkIdentifier) == '.NETFramework' And $(TargetFrameworkVersion) == 'v4.7.1'">
      <ItemGroup>
        <Reference Include="System.Runtime.CompilerServices.Unsafe">
          <HintPath>..\..\packages\System.Runtime.CompilerServices.Unsafe\lib\netstandard2.0\System.Runtime.CompilerServices.Unsafe.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
  <Choose>
    <When Condition="$(TargetFrameworkIdentifier) == '.NETFramework' And $(TargetFrameworkVersion) == 'v4.7.1'">
      <ItemGroup>
        <Reference Include="System.Threading.Tasks.Extensions">
          <HintPath>..\..\packages\System.Threading.Tasks.Extensions\lib\netstandard2.0\System.Threading.Tasks.Extensions.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
  <Choose>
    <When Condition="$(TargetFrameworkIdentifier) == '.NETFramework' And $(TargetFrameworkVersion) == 'v4.7.1'">
      <ItemGroup>
        <Reference Include="xunit.abstractions">
          <HintPath>..\..\packages\xunit.abstractions\lib\netstandard2.0\xunit.abstractions.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
  <Import Project="..\..\packages\Brotli.NET\build\Brotli.NET.targets" Condition="Exists('..\..\packages\Brotli.NET\build\Brotli.NET.targets')" Label="Paket" />
  <ItemGroup>
    <Analyzer Include="..\..\packages\xunit.analyzers\analyzers\dotnet\cs\xunit.analyzers.dll">
      <Paket>True</Paket>
    </Analyzer>
  </ItemGroup>
  <Choose>
    <When Condition="$(TargetFrameworkIdentifier) == '.NETFramework' And $(TargetFrameworkVersion) == 'v4.7.1'">
      <ItemGroup>
        <Reference Include="xunit.assert">
          <HintPath>..\..\packages\xunit.assert\lib\netstandard1.1\xunit.assert.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
  <Choose>
    <When Condition="$(TargetFrameworkIdentifier) == '.NETFramework' And $(TargetFrameworkVersion) == 'v4.7.1'">
      <ItemGroup>
        <Reference Include="xunit.core">
          <HintPath>..\..\packages\xunit.extensibility.core\lib\net452\xunit.core.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
  <Choose>
    <When Condition="$(TargetFrameworkIdentifier) == '.NETFramework' And $(TargetFrameworkVersion) == 'v4.7.1'">
      <ItemGroup>
        <Reference Include="xunit.execution.desktop">
          <HintPath>..\..\packages\xunit.extensibility.execution\lib\net452\xunit.execution.desktop.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
  <Import Project="..\..\packages\xunit.core\build\xunit.core.targets" Condition="Exists('..\..\packages\xunit.core\build\xunit.core.targets')" Label="Paket" />
</Project>